// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.5.0.0
//      SpecFlow Generator Version:3.5.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UITests.Tests.Budget
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("BudgetReal")]
    public partial class BudgetRealFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "BudgetReal.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-br"), "Tests/Budget", "BudgetReal", "\tAdição, edição e manipulação de orçamentos no sistema.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cadastrar orcamento em real com dez itens")]
        public virtual void CadastrarOrcamentoEmRealComDezItens()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar orcamento em real com dez itens", null, tagsOfScenario, argumentsOfScenario);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.Given("que estamos na tela de cadastro de budget", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "cliente",
                            "prazoEntrega",
                            "dataProvavelFechamento",
                            "dataEntrega",
                            "obra"});
                table3.AddRow(new string[] {
                            "MARCIO",
                            "A COMBINAR",
                            "20/12/2023",
                            "20/12/2023",
                            "Afrincan"});
#line 8
 testRunner.When("preencher os detalhes do orcamento", ((string)(null)), table3, "Quando ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "nome"});
                table4.AddRow(new string[] {
                            "RG"});
                table4.AddRow(new string[] {
                            "AR"});
                table4.AddRow(new string[] {
                            "JN"});
                table4.AddRow(new string[] {
                            "VAT"});
                table4.AddRow(new string[] {
                            "ADLQ"});
                table4.AddRow(new string[] {
                            "AT"});
                table4.AddRow(new string[] {
                            "FKA"});
                table4.AddRow(new string[] {
                            "AGS"});
                table4.AddRow(new string[] {
                            "AWK"});
                table4.AddRow(new string[] {
                            "AWG"});
#line 11
 testRunner.And("adicionar os produtos no orcamento", ((string)(null)), table4, "E ");
#line hidden
#line 23
 testRunner.And("gerar um PDF do orçamento ativo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 24
 testRunner.And("alterar orçamento para compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 25
 testRunner.And("alterar status do orçamento para informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 26
 testRunner.And("gerar um PDF do orçamento informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 27
 testRunner.And("alterar status do orçamento para fechado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 28
 testRunner.And("gerar um PDF do orçamento Fechado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Manipulação de condição comercial e Fatores com verificação do fator médio")]
        public virtual void ManipulacaoDeCondicaoComercialEFatoresComVerificacaoDoFatorMedio()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Manipulação de condição comercial e Fatores com verificação do fator médio", null, tagsOfScenario, argumentsOfScenario);
#line 30
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 31
 testRunner.Given("que estamos na tela de cadastro de budget", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "cliente",
                            "prazoEntrega",
                            "dataProvavelFechamento",
                            "dataEntrega",
                            "obra"});
                table5.AddRow(new string[] {
                            "MARCIO",
                            "A COMBINAR",
                            "20/12/2023",
                            "20/12/2023",
                            "Afrincan"});
#line 32
 testRunner.When("Usuário preencher os campos necessários do Orçamento", ((string)(null)), table5, "Quando ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "nome"});
                table6.AddRow(new string[] {
                            "RG"});
                table6.AddRow(new string[] {
                            "AR"});
                table6.AddRow(new string[] {
                            "JN"});
                table6.AddRow(new string[] {
                            "VAT"});
#line 35
 testRunner.And("adicionar quatro produtos no orcamento", ((string)(null)), table6, "E ");
#line hidden
#line 41
 testRunner.And("usuário altera a condição comercial", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 42
 testRunner.Then("Fator médio não deve ser alterado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 43
 testRunner.When("usuário alterar fator do primeiro item para 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 44
 testRunner.Then("o Fator médio deve ser alterado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 45
 testRunner.When("usuário alterar informação e o fator dos itens para 0.8", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 46
 testRunner.Then("o fator médio deve ser alterado para 0.8", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 47
 testRunner.When("o usuário alterar o status do orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 48
 testRunner.Then("o fator médio deve permanecer o mesmo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 49
 testRunner.When("o usuário gerar uma nova revisão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 50
 testRunner.Then("o fator médio deve permanecer igual a revisão anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 51
 testRunner.When("o usuário alterar o tipo de orçamento para compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 52
 testRunner.Then("o fator médio deve permanecer sem alteração", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 53
 testRunner.And("o fator dos itens deve permanecer sem alteração", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 54
 testRunner.When("o usuário alterar a cotação negociada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 55
 testRunner.Then("o fator deve permanecer sem altereção", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 56
 testRunner.When("o usuário alterar o fator de venda para 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 57
 testRunner.And("inserir novos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 58
 testRunner.Then("os itens deve ser inserido com o novo fator de venda", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 59
 testRunner.And("o fator médio deve ser alterado conforme a inclusão dos novos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Regras de negócio referente a IPI e ICMS no Orçamento")]
        public virtual void RegrasDeNegocioReferenteAIPIEICMSNoOrcamento()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Regras de negócio referente a IPI e ICMS no Orçamento", null, tagsOfScenario, argumentsOfScenario);
#line 61
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 62
 testRunner.Given("que estamos na tela de cadastro de budget", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 63
 testRunner.Given("que o orçamento esteja com o estado Acre selecionado, Consumidor NÃO final, Não c" +
                        "ontribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 64
 testRunner.When("inserir um item ADLQ com o NCM 76169900 e um item HB com o NCM 85168090", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 65
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 66
 testRunner.And("o ICMS deve ser Dezessete Porcento para o ADLQ e seis virgula noventa e quatro po" +
                        "rcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 67
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 68
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 69
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 70
 testRunner.And("o ICMS deve ser de Sete porcento para o ADLQ e cinco virgula quatorze para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 71
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 73
    testRunner.Given("que o orçamento esteja com o estado Alagoas selecionado, Consumidor NÃO final, Nã" +
                        "o contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 74
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 75
 testRunner.And("o ICMS deve ser Dezoito Porcento para o ADLQ e seis virgula noventa e quatro porc" +
                        "ento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 76
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 77
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 78
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 79
 testRunner.And("o ICMS de Alagoas deve ser de Sete porcento para o ADLQ e cinco virgula quatorze " +
                        " para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 80
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 82
 testRunner.Given("que o orçamento esteja com o estado Amazonas selecionado, Consumidor NÃO final, N" +
                        "ão contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 83
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 84
 testRunner.And("o ICMS deve ser Dezoito Porcento para o ADLQ e oito virgula oitenta porcento para" +
                        " o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 85
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 86
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 87
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 88
 testRunner.And("o ICMS deve ser de Sete porcento para o ADLQ e cinco virgula quatorze para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 89
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 91
 testRunner.Given("que o orçamento esteja com o estado Bahia selecionado, Consumidor NÃO final, Não " +
                        "contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 92
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 93
 testRunner.And("o ICMS deve ser Dezoito Porcento para o ADLQ e seis virgula noventa e quatro porc" +
                        "ento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 94
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 95
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 96
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 97
 testRunner.And("o ICMS da Bahia deve ser de Sete porcento para o ADLQ e cinco virgula quatorze  p" +
                        "ara o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 98
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 100
 testRunner.Given("que o orçamento esteja com o estado Ceara selecionado, Consumidor NÃO final, Não " +
                        "contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 101
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 102
 testRunner.And("o ICMS deve ser Dezoito Porcento para o ADLQ e dez virgula cinquenta e dois porce" +
                        "nto para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 103
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 104
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 105
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 106
 testRunner.And("o ICMS do Ceara deve ser de Sete porcento para o ADLQ e cinco virgula quatorze  p" +
                        "ara o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 107
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 109
 testRunner.Given("que o orçamento esteja com o estado Distrito Federal selecionado, Consumidor NÃO " +
                        "final, Não contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 110
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 111
 testRunner.And("o ICMS deve ser Dezoito Porcento para o ADLQ e dez virgula cinquenta e dois porce" +
                        "nto para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 112
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 113
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 114
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 115
 testRunner.And("o ICMS do Distrito Federal deve ser de Sete porcento para o ADLQ e cinco virgula " +
                        "quatorze  para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 116
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 118
 testRunner.Given("que o orçamento esteja com o estado Espirito Santo selecionado, Consumidor NÃO fi" +
                        "nal, Não contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 119
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 120
 testRunner.And("o ICMS deve ser Dezessete Porcento para o ADLQ e seis virgula noventa e quatro po" +
                        "rcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 121
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 122
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 123
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 124
 testRunner.And("o ICMS do Espirito Santo deve ser de Sete porcento para o ADLQ e cinco virgula qu" +
                        "atorze  para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 125
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 127
 testRunner.Given("que o orçamento esteja com o estado Goias selecionado, Consumidor NÃO final, Não " +
                        "contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 128
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 129
 testRunner.And("o ICMS deve ser Dezessete Porcento para o ADLQ e seis virgula noventa e quatro po" +
                        "rcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 130
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 131
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 132
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 133
 testRunner.And("o ICMS de Goias deve ser de Sete porcento para o ADLQ e cinco virgula quatorze  p" +
                        "ara o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 134
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 136
 testRunner.Given("que o orçamento esteja com o estado Maranhão selecionado, Consumidor NÃO final, N" +
                        "ão contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 137
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 138
 testRunner.And("o ICMS deve ser Dezoito Porcento para o ADLQ e dez virgula cinquenta e dois porce" +
                        "nto para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 139
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 140
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 141
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 142
 testRunner.And("o ICMS do Maranhão deve ser de Sete porcento para o ADLQ e cinco virgula quatorze" +
                        "  para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 143
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 145
 testRunner.Given("que o orçamento esteja com o estado Mato Grosso Do Sul selecionado, Consumidor NÃ" +
                        "O final, Não contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 146
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 147
 testRunner.And("o ICMS do Mato Grosso do Sul deve ser dezessete Porcento para o ADLQ e seis virgu" +
                        "la noventa e quatro porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 148
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 149
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 150
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 151
 testRunner.And("o ICMS do Mato Grosso do Sul deve ser de Sete porcento para o ADLQ e cinco virgul" +
                        "a quatorze  para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 152
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 154
 testRunner.Given("que o orçamento esteja com o estado Pará selecionado, Consumidor NÃO final, Não c" +
                        "ontribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 155
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 156
 testRunner.And("o ICMS Pará deve ser dezessete Porcento para o ADLQ e seis virgula noventa e quat" +
                        "ro porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 157
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 158
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 159
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 160
 testRunner.And("o ICMS do Pará deve ser de Sete porcento para o ADLQ e cinco virgula quatorze  pa" +
                        "ra o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 161
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 163
 testRunner.Given("que o orçamento esteja com o estado Paraiba selecionado, Consumidor NÃO final, Nã" +
                        "o contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 164
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 165
 testRunner.And("o ICMS da Paraiba deve ser dezoito Porcento para o ADLQ e oito virgula oitenta po" +
                        "rcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 166
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 167
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 168
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 169
 testRunner.And("o ICMS da Paraiba deve ser de Sete porcento para o ADLQ e cinco virgula quatorze " +
                        " para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 170
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 172
 testRunner.Given("que o orçamento esteja com o estado Pernanbuco selecionado, Consumidor NÃO final," +
                        " Não contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 173
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 174
 testRunner.And("o ICMS do Pernanbuco deve ser dezoito Porcento para o ADLQ e seis virgula noventa" +
                        " e quatro porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 175
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 176
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 177
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 178
 testRunner.And("o ICMS do Pernanbuco deve ser de Sete porcento para o ADLQ e cinco virgula quator" +
                        "ze  para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 179
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 181
 testRunner.Given("que o orçamento esteja com o estado Piaui selecionado, Consumidor NÃO final, Não " +
                        "contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 182
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 183
 testRunner.And("o ICMS do Piaui deve ser dezoito Porcento para o ADLQ e oito virgula oitenta porc" +
                        "ento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 184
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 185
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 186
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 187
 testRunner.And("o ICMS do Piaui deve ser de Sete porcento para o ADLQ e cinco virgula quatorze  p" +
                        "ara o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 188
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 190
 testRunner.Given("que o orçamento esteja com o estado Rio Grande do Norte selecionado, Consumidor N" +
                        "ÃO final, Não contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 191
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 192
 testRunner.And("o ICMS Rio Grande do Norte deve ser dezoito Porcento para o ADLQ e oito virgula o" +
                        "itenta porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 193
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 194
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 195
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 196
 testRunner.And("o ICMS Rio Grande do Norte deve ser de Sete porcento para o ADLQ e cinco virgula " +
                        "quatorze  para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 197
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 199
 testRunner.Given("que o orçamento esteja com o estado Rondonia selecionado, Consumidor NÃO final, N" +
                        "ão contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 200
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 201
 testRunner.And("o ICMS deve ser dezessete virgula cinquenta Porcento para o ADLQ e seis virgula n" +
                        "oventa e quatro porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 202
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 203
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 204
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 205
 testRunner.And("o ICMS de Rondonia deve ser de Sete porcento para o ADLQ e cinco virgula quatorze" +
                        "  para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 206
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 208
 testRunner.Given("que o orçamento esteja com o estado Roraima selecionado, Consumidor NÃO final, Nã" +
                        "o contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 209
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 210
 testRunner.And("o ICMS de Roraima deve ser dezessete Porcento para o ADLQ e seis virgula noventa " +
                        "e quatro porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 211
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 212
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 213
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 214
 testRunner.And("o ICMS de Roraima deve ser de Sete porcento para o ADLQ e cinco virgula quatorze " +
                        " para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 215
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 217
 testRunner.Given("que o orçamento esteja com o estado Santa Catarina selecionado, Consumidor NÃO fi" +
                        "nal, Não contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 218
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 219
 testRunner.And("o ICMS deve ser dezessete Porcento para o ADLQ e oito virgula oitenta porcento pa" +
                        "ra o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 220
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 221
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 222
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 223
 testRunner.And("o ICMS deve ser de doze porcento para o ADLQ e oito virgula oitenta para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 224
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 226
 testRunner.Given("que o orçamento esteja com o estado São Paulo selecionado, Consumidor NÃO final, " +
                        "Não contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 227
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 228
 testRunner.And("o ICMS de São Paulo deve ser dezoito Porcento para o ADLQ e oito virgula oitenta " +
                        "porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 229
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 230
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 231
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 232
 testRunner.And("o ICMS deve ser de doze porcento para o ADLQ e oito virgula oitenta para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 233
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 235
 testRunner.Given("que o orçamento esteja com o estado Sergipe selecionado, Consumidor NÃO final, Nã" +
                        "o contribuinte ICMS, IPI NÃO Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 236
 testRunner.Then("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 237
 testRunner.And("o ICMS de Sergipe deve ser dezoito Porcento para o ADLQ e dez virgula cinquenta e" +
                        " dois porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 238
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 239
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 240
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 241
 testRunner.And("o ICMS de Sergipe deve ser de sete porcento para o ADLQ e cinco virgula quatorze " +
                        "para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 242
 testRunner.And("verificar que o item HB tem ICMS Red", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 244
 testRunner.Given("que o estado do Paraná possuí regra diferentes para o ICMS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 245
 testRunner.Then("quando o usuário inserir itens para cliente final, NÃO contribuinte ICMS e IPI NÃ" +
                        "O isento o ICMS deve ser dezoito porcento para o ADLQ e oito virgula oitenta par" +
                        "a o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 246
 testRunner.And("o IPI deve ser cinco porcento para o ADLQ e dez porcento para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 247
 testRunner.When("alterar para Contribuinte ICMS e IPI Isento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 248
 testRunner.Then("o IPI deve ser zerado para ambos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 249
 testRunner.And("o ICMS deve ser de dezoito porcento para o ADLQ e oito virgula oitenta para o HB", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 250
 testRunner.When("o orçamento entrar na regra do ICMS Diferimento o cliente deve ser industrializaç" +
                        "ão/comercialização, contribuinte ICMS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 251
 testRunner.Then("o ICMS deve ser dezoito porcento na grid do item ADLQ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 252
 testRunner.And("no campo ICMS deve existir uma tooltip informando que o valor é doze porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 253
 testRunner.And("na grid deve estar marcado como ICMS DIF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 254
 testRunner.Then("o ICMS do item HB deve ser oito e oitenta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 255
 testRunner.And("no campo ICMS deve existir uma tooltip informando que o valor é cinco e oitenta e" +
                        " sete porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 256
 testRunner.And("na grid deve estar marcado como ICMS DIF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Criação e manipulação de orçamentos de serviço")]
        public virtual void CriacaoEManipulacaoDeOrcamentosDeServico()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criação e manipulação de orçamentos de serviço", null, tagsOfScenario, argumentsOfScenario);
#line 258
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 259
 testRunner.Given("que estamos cadastrando um orçamento para o tipo Serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 260
 testRunner.Then("o usuário deve preencher os campos obrigatórios do orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 261
 testRunner.When("o orçamento é de tipo serviço, só deve estar liberado a inserção de itens do tipo" +
                        " serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 262
 testRunner.Then("o usuário insere item Z-Service para Certificação de Fluxos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 263
 testRunner.And("insere um item Z-Service para CERTIFICAÇÃO DE SALAS LIMPAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 264
 testRunner.And("insere um item Z-Service para MONTAGEM DE EQUIPAMENTOS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 265
 testRunner.And("insere um item Z-Service para SUBST. E TESTES DE FILTROS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 266
 testRunner.And("insere um item Z-Service para TESTE DE ESTANQUEIDADE UTAs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 267
 testRunner.And("insere um item Z-Service para AJUSTE/CALIBRAÇÃO DE VAVs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 268
 testRunner.And("insere um item Z-Service para VISITA TÉCNICA", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 269
 testRunner.And("insere um item Z-Service para PINTURA", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 270
 testRunner.Then("deve abrir mais uma seleção para inserir o tipo da pintura", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 271
 testRunner.And("insere um item SERV-BCSI / STAR UP EM OBRA CHILLER BCSI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 272
 testRunner.When("o usuário alterar o orçamento para Pendente Análise", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 273
 testRunner.Then("o usuário responsável pela equipe técnica deve precificar os serviços corresponde" +
                        "nte ao Orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 274
 testRunner.And("precificar o primeiro item dando um desconto máximo de dez porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 275
 testRunner.And("precificar o segundo item dando um desconto de quinze porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 276
 testRunner.And("precificar o terceiro item dando um desconto de vinte porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 277
 testRunner.And("precificar o quarto item dando um desconto de vinte e cinco porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 278
 testRunner.And("precificar o quinto item dando um desconte de trinta porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 279
 testRunner.And("precificar o sexto item dando um desconto de trinta e cinco porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 280
 testRunner.And("precificar o setimo item dando um desconto de quarenta porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 281
 testRunner.And("precificar o oitavo item dando um desconto de quarenta e cinco porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 282
 testRunner.And("precificar o nono item dando um desconto de cinquenta porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 283
 testRunner.When("finalizar a precificação de todos os itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 284
 testRunner.Then("o responsável pela análise técnica deve aprovar o orçamento clicando em \"Aprovar\"" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 285
 testRunner.Given("que o Orçamento retornou ao Status Ativo após a aprovação pela equipe técnica e o" +
                        " Orçamentista retornou ao orçamento para adequações conforme a nota enviada pela" +
                        " analise técnica", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 286
 testRunner.Then("o Orçamentista deve adequar o orçamento o alterando para Compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 287
 testRunner.And("preenchendo todos os campos obrigatórios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 288
 testRunner.Then("o orçamentista deve alterar o primeiro item para o Fator minímo permitido para de" +
                        "sconto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 289
 testRunner.And("o orçamentista deve alterar o segundo item para o Fator minímo permitido para des" +
                        "conto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 290
 testRunner.And("o orçamentista deve alterar o terceiro item para o Fator minímo permitido para de" +
                        "sconto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 291
 testRunner.And("o orçamentista deve alterar o quarto item para o Fator minímo permitido para desc" +
                        "onto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 292
 testRunner.And("o orçamentista deve alterar o quinto item para o Fator minímo permitido para desc" +
                        "onto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 293
 testRunner.And("o orçamentista deve alterar o sexto item para o Fator minímo permitido para desco" +
                        "nto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 294
 testRunner.And("o orçamentista deve alterar o sétimo item para o Fator minímo permitido para desc" +
                        "onto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 295
 testRunner.And("o orçamentista deve alterar o oitavo item para o Fator minímo permitido para desc" +
                        "onto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 296
 testRunner.When("alterado todos itens o orçamentista deve alterar o Status para informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 297
 testRunner.And("verificar que existe as opções de Status são Cancelado, Perdido e Informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 298
 testRunner.Then("Deve gerar o PDF do orçamento com Status informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 299
 testRunner.And("alterar a Data de Entrega e clicar em Atualizar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 300
 testRunner.And("deve ser testado a rotina de nova Revisão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 301
 testRunner.And("após o teste com sucesso ao gerar Revisão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 302
 testRunner.Then("Deve ser alterado o status do orçamento para Informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 303
 testRunner.And("alterar status para Fechado e finalizar com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rateio de despesas adicionais")]
        public virtual void RateioDeDespesasAdicionais()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rateio de despesas adicionais", null, tagsOfScenario, argumentsOfScenario);
#line 305
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 306
testRunner.Given("que estamos dentro do cadastro de orçamento em Real", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 307
testRunner.Then("deve ser preenchido os campos obrigatórios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 308
testRunner.And("deixar a condição comercial \"Contra aviso de embarque\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 309
testRunner.And("Taxa de emabalagem com zero Porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 310
testRunner.When("inserir dez itens AT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 311
testRunner.Then("com os itens já inseridos no orçamento o usuário deve clicar em Despesas Adiciona" +
                        "is", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 312
testRunner.And("Deve inserir dez porcento de documentação", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 313
testRunner.Then("o valor deve ser trezentos e dez e 46 centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 314
testRunner.And("Inserir vinte porcento de Mão de obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 315
testRunner.Then("o valor deve ser seiscentos e vinte e noventa e dois centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 316
testRunner.And("inserir trinta porcento de Outros valores", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 317
testRunner.Then("o valor deve ser novecentos e trinta e um e trinta e oito", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 318
testRunner.And("inserir quarenta porcento de Frete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 319
testRunner.Then("o valor deve ser mil duzentos e quarenta e um com oitenta e quatro centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 320
testRunner.And("o valor do Total de Despesas deve ser três mil cento e quatro com cinquenta e nov" +
                        "e centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 321
testRunner.Then("deve clicar em Salvar Despesas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 322
testRunner.Then("o primeiro item deve ter o valor unitário de cento e três com oitenta e um centav" +
                        "os", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 323
testRunner.And("a despesa unitária de cento e três com oitenta e um centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 324
testRunner.And("o total de duzento e sete com sessenta e um centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 325
testRunner.Then("o Segundo item deve ter o valor unitário de cento e quarenta e nove com setenta e" +
                        " três centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 326
testRunner.And("a despesa unitária de cento e quarenta e nove com setenta e três centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 327
testRunner.And("o total de duzentos e noventa e nove com quarenta e seis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 328
testRunner.Then("o terceiro item deve ter o valor unitário de cento e noventa e cinco com sessenta" +
                        " e cinco centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 329
testRunner.And("a despesa unitária de cento e noventa e cinco com sessenta e cinco centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 330
testRunner.And("o total trezentos e noventa e um com trinta e um centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 331
testRunner.Then("o quarto item deve ter o valor unitário de duzentos e quarenta e um com cinquenta" +
                        " e oito centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 332
testRunner.And("a despesa unitária de duzentos e quarenta e um com cinquenta e oito centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 333
testRunner.And("o total de quatrocentos e oitenta e três com dezesseis centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 334
testRunner.Then("o quinto item deve ter o valor unitário de duzentos e oitenta e sete reais com ci" +
                        "nquenta centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 335
testRunner.And("a despesa unitária de duzentos e oitenta e sete reais com cinquenta centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 336
testRunner.And("o total de quinhetos e setenta e cinco", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 337
testRunner.Then("o sexto item deve ter o valor unitário trezentos e trinta e três com quarenta e d" +
                        "ois centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 338
testRunner.And("a despesa unitária trezentos e trinta e três com quarenta e dois centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 339
testRunner.And("o total de seissentos e sessenta e seis com oitenta e quatro centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 340
testRunner.Then("o setimo item deve ter o valor unitário de trezentos e setenta e nove com trinta " +
                        "e quatro centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 341
testRunner.And("a despesa unitária de trezentos e setenta e nove com trinta e quatro centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 342
testRunner.And("o total de setessentos e cinquenta oito com sessenta e oito centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 343
testRunner.Then("o oitavo item deve ter o valor unitário de quatrocentos e vinte e cinco com vinte" +
                        " e seis centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 344
testRunner.And("a despesa unitária de quatrocentos e vinte e cinco com vinte e seis centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 345
testRunner.And("o total de oitocentos e cinquenta com cinquenta e dois centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 346
testRunner.Then("o nono item deve ter o valor unitário de quatrocentos e setenta e um com dezonove" +
                        " centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 347
testRunner.And("a despesa unitária de quatrocentos e setenta e um com vinte centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 348
testRunner.And("o total novecentos e quarenta e dois com trinta e nove centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 349
testRunner.Then("o decimo item deve ter o valor unitário de quinhentos e dezesseta com onze centav" +
                        "os", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 350
testRunner.And("a despesa unitária de quinhentos e dezesseta com dez centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 351
testRunner.And("o total deve ser de mil e trinta e quatro com vinte um centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 352
testRunner.Then("o valor de documento deve ser trezentos e dez com quarenta e seis centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 353
testRunner.And("o valor de Mão de obra seissentos e vinte com noventa e dois centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 354
testRunner.And("o valor de outros valores de novecentos e trinta e um com trinta e oito centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 355
testRunner.And("o valor de Frete de mil e duzentos e quarenta um com oitenta e três centavos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Regras de nova Revisão e Alteração de Status - Orçamento de Produto")]
        public virtual void RegrasDeNovaRevisaoEAlteracaoDeStatus_OrcamentoDeProduto()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Regras de nova Revisão e Alteração de Status - Orçamento de Produto", null, tagsOfScenario, argumentsOfScenario);
#line 357
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 358
testRunner.Given("que o usuário está localizado em cadastro do Orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 359
testRunner.And("com os campos obrigatórios para Consulta de Preço preenchido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 360
testRunner.Then("Inserir quatro itens AT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 361
testRunner.And("Clicar em Status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 362
testRunner.Then("Deve ser possível alterar Status para Informado e Cancelado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 363
testRunner.And("Alterar o Status para Informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 364
testRunner.Given("que o orçamento está com status Informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 365
testRunner.Then("Verificar que os status disponiveis para alteração Fechado e Cancelado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 366
testRunner.When("o usuário clicar em Nova Revisão e gerar nova revisão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 367
testRunner.Then("o orçamento deve ser alterado para a revisão 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 368
testRunner.Given("que o orçamento retornou para o Status ativo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 369
testRunner.Then("alterar o tipo do orçamento para Compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 370
testRunner.And("preencher os campos obrigatórios para o orçamento Compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 371
testRunner.When("Clicar em Status deve existir as opções de seleção - Informado | Perdido | Cancel" +
                        "ado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 372
testRunner.Then("Alterar Status para Informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 373
testRunner.Given("que o orçamento retornou para o Status informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 374
testRunner.Then("clicar em criar uma nova Revisão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 375
testRunner.Then("deve ser alterado o orçamento para Revisão 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 376
testRunner.And("o status deve retornar para Ativo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 377
testRunner.Given("que estamos com o orçamento com Status Ativo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 378
testRunner.Then("selecionar a revisão 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 379
testRunner.And("na revisão 0 clicar em criar uma nova revisão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 380
testRunner.Then("deve ser criado a revisão 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 381
testRunner.And("a revisão 2 deve ser alterado automáticamente para informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 382
testRunner.When("o usuário alterar a revisão 3 para o status Informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 383
testRunner.Then("alterar a Data de Entrega e atualizar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 384
testRunner.And("alterar a condição de entrega e atualizar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 385
testRunner.And("alterar o Status para Fechado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 386
testRunner.Then("após o orçamento com Status Fechado, não deve permitir haver alteração de Status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Regras e funcionalidade dos Botões de Itens de Orçamento")]
        public virtual void RegrasEFuncionalidadeDosBotoesDeItensDeOrcamento()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Regras e funcionalidade dos Botões de Itens de Orçamento", null, tagsOfScenario, argumentsOfScenario);
#line 388
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 389
testRunner.Given("que o usuário está conectado em cadastro de orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 390
testRunner.Then("preencher os dados necessários do orçamento para Consulta de preços", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 391
testRunner.When("o usuário inserir 5 itens AT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 392
testRunner.Then("devemos testar o botão de Atualizar o item - Alterando o primeiro item 1225x125 p" +
                        "ara 1225 x 525", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 393
testRunner.And("verificar se os dados foram alterados corretamente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 394
testRunner.Then("devemos testar o botão inserir posicionado, selecionando o segundo item alterar d" +
                        "e 1225 x 225 para 1225 x 625 e clicando em inserir posicionado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 395
testRunner.And("verificar se o item foi inserido corratamente na posição dois", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 396
testRunner.Then("devemos testar o botão Despesas Adicionais", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 397
testRunner.When("preencher o percentual de documentação com 10 porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 398
testRunner.And("devemos verificar se o valor da documentação está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 399
testRunner.When("preencher o Percentual de Mão de Obra com 20 porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 400
testRunner.And("devemos verificar se o valor da mão de obra está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 401
testRunner.When("preencher o Percentual de Outros Valores com 30 porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 402
testRunner.And("devemos verificar se o valor de outros valores está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 403
testRunner.When("preencher o percentual de Frete com 40 porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 404
testRunner.And("devemos verificar se o valor do Frete está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 405
testRunner.And("verificar se o Total de Despesas Adicionais está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 406
testRunner.Then("devemos testar o botão Estrutura de preços selecionando o quarto item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 407
testRunner.And("verificar se o código está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 408
testRunner.And("verificar se a descrição está correta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 409
testRunner.And("verificar se o ICMS está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 410
testRunner.And("verificar se o valor do ICMS está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 411
testRunner.And("verificar se o preço do ICMS está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 412
testRunner.And("verificar se o juros está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 413
testRunner.And("verificar se o valor do juros está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 414
testRunner.And("verificar se o preço com juros está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 415
testRunner.And("verificar se a taxa de embalagem está correta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 416
testRunner.And("verficar se o valor da embalagem está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 417
testRunner.And("verificar se o preço com a embalagem está correto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 418
testRunner.When("realizar a verificar do fator que deve estar com o fator da capa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 419
testRunner.Then("alterar o fator para 0,9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 420
testRunner.And("verificar que o valor do fator deve ser 10 porcento de desconto do valor do item " +
                        "somando ICMS, juros e Taxa de embalagem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 421
testRunner.And("verificar que o preço com fator deve ser o valor com o desconto dos 10 porcento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 422
testRunner.And("verificar o valor das despesas adicionais", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 423
testRunner.Then("devemos verificar os impostos adicionais herdados do item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 424
testRunner.And("verificar preço unitário base, que deve ser o valor do item sem impostos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 425
testRunner.And("verificar o preço unitário total, deve ser o valor com impostos e o desconto do f" +
                        "ator incluido anteriormente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 426
testRunner.Then("ao sair da tela de Estrutura de preços, verificar se o valor do item não foi alte" +
                        "rado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 427
testRunner.When("selecionar todos os itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 428
testRunner.Then("devemos testar o botão Duplicar Item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 429
testRunner.And("verificar se os itens foram duplicados corretamente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 430
testRunner.Then("devemos testar o botão de Alterar Informações e adicionar a sequencia 1 a 3 e de " +
                        "6 a 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 431
testRunner.And("verificar se os dados foram alterados corretamente para os itens 1, 2, 3, 6, 7, 8" +
                        ", 9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 432
testRunner.Then("devemos testar o botão de Alterar Informações e adicionar as sequencias 4 a 5 e d" +
                        "e 10 a 12", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 433
testRunner.And("verificar se os dados foram alterados corretamente para os itens 4, 5, 10, 11, 12" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 434
testRunner.When("selecionar todos os itens existentes no orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 435
testRunner.Then("devemos testar o botão Remover Selecionados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 436
testRunner.And("verificar se todos os itens foram removidos corretamente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Filtros de Pesquisa na grid de Orçamentos")]
        public virtual void FiltrosDePesquisaNaGridDeOrcamentos()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Filtros de Pesquisa na grid de Orçamentos", null, tagsOfScenario, argumentsOfScenario);
#line 438
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 439
testRunner.Given("que o usuário está logado e localizado na tela de Orçamentos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 440
testRunner.Then("o usuário realiza pesquisa por Código igual de Orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 441
testRunner.And("pesquisa por código maior que", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 442
testRunner.And("pesquisa por código Menor Que", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 443
testRunner.Then("pesquisar pela Revisão Igual que", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 444
testRunner.And("pesquisa pela Revisão maior que", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 445
testRunner.And("pesquisa pela Revisão Menor Que", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 446
testRunner.Then("pesquisar pelo Status Ativo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 447
testRunner.And("pesquisar pelo Status Informado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 448
testRunner.And("pesquisar pelo Status Fechado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 449
testRunner.And("pesquisar pelo Status Aprovado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 450
testRunner.And("pesquisar pelo Status Perdido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 451
testRunner.And("pesquisar pelo Status Cancelado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 452
testRunner.And("pesquisar pelo Status Em Verificação", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 453
testRunner.And("pesquisar pelo Status Confirmado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 454
testRunner.And("pesquisar pelo Status Sincronização Pendente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 455
testRunner.And("pesquisar pelo Status de segundo Ativo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 456
testRunner.Then("realizar a pesquisa por Contains Documento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 457
testRunner.And("pesquisar por Igual ao Documento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 458
testRunner.And("pesquisar por Diferente ao Documento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 459
testRunner.And("pesquisar por Começa Com ao Documento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 460
testRunner.And("Pesquisar por Termina Com ao Documento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 461
testRunner.Then("realizar a pesquisa por Contains Cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 462
testRunner.And("pesquisar por Igual ao Cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 463
testRunner.And("pesquisar por Diferente ao Cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 464
testRunner.And("pesquisar por Começa Com ao Cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 465
testRunner.And("Pesquisar por Termina Com ao Cliente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 466
testRunner.Then("Realizar a pesquisa pelo Tipo de Orçamento - Consulta de preços", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
#line 467
testRunner.And("Realizar a pesquisa pelo Tipo de Orçamento - Para Compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 468
testRunner.Then("realizar a pesquisa por Contains Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 469
testRunner.And("pesquisar por Igual a Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 470
testRunner.And("pesquisar por Diferente a Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 471
testRunner.And("pesquisar por Começa Com a Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 472
testRunner.And("Pesquisar por Termina Com a Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 473
testRunner.Then("Realizar a pesquisa pela Categoria - Produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
#line 474
testRunner.And("Realizar a pesquisa pela Categoria - Serviço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 475
testRunner.Then("Realizar a pesquisa pela Moeda - Real", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
#line 476
testRunner.And("Realizar a pesquisa pela Moeda - Dólar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 477
testRunner.Then("realizar a pesquisa por Contains Usuário", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 478
testRunner.And("pesquisar por Igual a Usuário", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 479
testRunner.And("pesquisar por Diferente a Usuário", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 480
testRunner.And("pesquisar por Começa Com a Usuário", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 481
testRunner.And("Pesquisar por Termina Com a Usuário", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 482
testRunner.Then("realizar a pesquisa pela data de emissão 01-01-2020 a 31-12-2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 483
testRunner.Then("realizar a pesquisa pela data de revisão 01-01-2020 a 31-12-2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 484
testRunner.Then("realizar a pesquisa pela data provável de fechamento 01-01-2020 a 31-12-2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 485
testRunner.Then("realizar a pesquisa pela data provável de fechamento 01-01-2020 a 31-12-2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 486
testRunner.Then("realizar a pesquisa pela data de fechamento 01-01-2020 a 31-12-2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 487
testRunner.Then("realizar a pesquisa por Contains Prazo de entrega", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 488
testRunner.And("pesquisar por Igual a Prazo de entrega", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 489
testRunner.And("pesquisar por Diferente a Prazo de entrega", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 490
testRunner.And("pesquisar por Começa Com a Prazo de entrega", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 491
testRunner.And("Pesquisar por Termina Com a Prazo de entrega", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 492
testRunner.Then("realizar pesquisa pelo Valor Total", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 493
testRunner.Then("realizar a pesquisa por Contains Estado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 494
testRunner.And("pesquisar por Igual ao Estado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 495
testRunner.And("pesquisar por Diferente ao Estado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 496
testRunner.And("pesquisar por Começa Com ao Estado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 497
testRunner.And("Pesquisar por Termina Com ao Estado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 498
testRunner.Then("pesquisar pela Chance de ganho 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 499
testRunner.And("pesquisar pela Chance de ganho 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 500
testRunner.And("pesquisar pela Chance de ganho 25", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 501
testRunner.And("pesquisar pela Chance de ganho 50", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 502
testRunner.And("pesquisar pela Chance de ganho 75", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 503
testRunner.And("pesquisar pela Chance de ganho 90", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 504
testRunner.Then("realizar a pesquisa por Contains Vendedor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 505
testRunner.And("pesquisar por Igual ao Vendedor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 506
testRunner.And("pesquisar por Diferente ao Vendedor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 507
testRunner.And("pesquisar por Começa Com ao Vendedor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 508
testRunner.And("Pesquisar por Termina Com ao Vendedor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 509
testRunner.Then("realizar a pesquisa por Contains Instalador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 510
testRunner.And("pesquisar por Igual ao Instalador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 511
testRunner.And("pesquisar por Diferente ao Instalador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 512
testRunner.And("pesquisar por Começa Com ao Instalador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 513
testRunner.And("Pesquisar por Termina Com ao Instalador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 514
testRunner.Then("realizar a pesquisa por Contains Contato", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 515
testRunner.And("pesquisar por Igual ao Contato", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 516
testRunner.And("pesquisar por Diferente ao Contato", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 517
testRunner.And("pesquisar por Começa Com ao Contato", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 518
testRunner.And("Pesquisar por Termina Com ao Contato", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 519
testRunner.Then("realizar a pesquisa pela Vigência de Oferta 01-01-2020 a 31-12-2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 520
testRunner.Then("realizar a pesquisa pela condição comercial 28ddl", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 521
testRunner.Then("realizar a pesquisa pela linha de produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 522
testRunner.Then("realizar a pesquisa pelo Tipo de Operação - Consulmo próprio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 523
testRunner.And("realizar a pesquisa pelo Tipo de Operação - Industrialização", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 524
testRunner.Then("realizar a pesquisa por Contains Código Transportadora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 525
testRunner.And("pesquisar por Igual ao Código Transportadora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 526
testRunner.And("pesquisar por Diferente ao Código Transportadora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 527
testRunner.And("pesquisar por Começa Com ao Código Transportadora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 528
testRunner.And("Pesquisar por Termina Com ao Código Transportadora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 529
testRunner.Then("realizar a pesquisa por Contains Código Redespacho", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 530
testRunner.And("pesquisar por Igual ao Código Redespacho", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 531
testRunner.And("pesquisar por Diferente ao Código Redespacho", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 532
testRunner.And("pesquisar por Começa Com ao Código Redespacho", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 533
testRunner.And("Pesquisar por Termina Com ao Código Redespacho", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 534
testRunner.Given("que o sistema é case sensitive e multipla pesquisa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 535
testRunner.Then("realizar pesquisa por Cliente em letras maíusculas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 536
testRunner.And("realizar pesquisa por Cliente em letras minúsculas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 537
testRunner.And("realizar pesquisa por Cliente em letras maíusculas e minúsculas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 538
testRunner.And("realizar pesquisa de Cliente e Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 539
testRunner.And("realizar pesquisa de Cliente, obra e Data de Emissão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Integração TQS 2 x Select")]
        public virtual void IntegracaoTQS2XSelect()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Integração TQS 2 x Select", null, tagsOfScenario, argumentsOfScenario);
#line 541
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 542
testRunner.Given("que possuímos uma maquina IC_ICH configurado no Select", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 543
testRunner.Then("Acessar a tela de cadastro de orçamento em produto e em reais", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 544
testRunner.And("preencher todos campos necessários para o orçamento do tipo Compra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 545
testRunner.When("abrir a configuração para o produto IC_ICV/ICH", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 546
testRunner.Then("no campo ID-Select inserir a Id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 547
testRunner.And("Clicar em pesquisar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 548
testRunner.Then("verificar se os campos foram alimentadas corretamente.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 549
testRunner.And("inserir o item e verificar se a descrição está correta para o IC_ICH", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 551
testRunner.Given("que possuímos uma maquina IC_ICv configurado no Select", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 552
testRunner.Then("verificar se os campos IC_ICV foram alimentadas corretamente.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 553
testRunner.And("inserir o item e verificar se a descrição está correta para o IC_ICV", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 555
testRunner.Given("que os itens foram inseridos corretamente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 556
testRunner.Then("é necessário alterar status até o status fechado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 557
testRunner.And("verificar se o status é alterado para Aprovado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Analise de pré fechamento Orçamento Produtos em Reais")]
        public virtual void AnaliseDePreFechamentoOrcamentoProdutosEmReais()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Analise de pré fechamento Orçamento Produtos em Reais", null, tagsOfScenario, argumentsOfScenario);
#line 559
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 560
testRunner.Given("que o orçamentista está localizado na criação de um orçamento Produto em Reais", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 561
testRunner.When("Preencher os dados do orçamento para o tipo Compra com o cliente A H EMPREENDIMEN" +
                        "TOS COMERCIAL LTDA", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 562
testRunner.And("inserir cinco itens no orçamento sem data de entrega", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 563
testRunner.When("alterar o status para Informado, verificar que irá existir um novo botão que é pa" +
                        "ra analise de pré fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 564
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 565
testRunner.And(@"verificar que deve informar com a mensagem ""É necessário informar no cadastro do Cliente um contato do Principal"" / ""É necessário informar no cadastro do Cliente um contato do Tipo Fiscal"" / ""É necessário preencher a data de entrega do orçamento"" / ""Há itens sem data de entrega informada, favor verificar"" / ""É necessário preencher a condição de entrega do orçamento.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 566
testRunner.Then("Inserir data de entrega na capa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 567
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 568
testRunner.And(@"verificar que deve mostrar ""É necessário informar no cadastro do Cliente um contato do Principal"" / ""É necessário informar no cadastro do Cliente um contato do Tipo Fiscal"" / ""Há itens sem data de entrega informada, favor verificar"" / ""É necessário preencher a condição de entrega do orçamento.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 569
testRunner.Then("Inserir data de entrega nos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 570
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 571
testRunner.And("verificar que deve mostrar a mensagem \"É necessário informar no cadastro do Clien" +
                        "te um contato do Principal\" / \"É necessário informar no cadastro do Cliente um c" +
                        "ontato do Tipo Fiscal\" / \"É necessário preencher a condição de entrega do orçame" +
                        "nto.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 572
testRunner.Then("Inserir Condição de entrega nos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 573
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 574
testRunner.And("verificar que deve informar \"É necessário informar no cadastro do Cliente um cont" +
                        "ato do Principal\" / \"É necessário informar no cadastro do Cliente um contato do " +
                        "Tipo Fiscal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 575
testRunner.Then("alterar o cliente para MARCIO GONÇALVES", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 576
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 577
testRunner.And("verificar que a mensagem será de sem pendencias para fechamento de orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 578
testRunner.And("zerar o preço de um item direto pela base de dados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 579
testRunner.And("verificar se valida corretamente que existe itens com valor zerado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Analise de pré fechamento Orçamento Serviço em Reais")]
        public virtual void AnaliseDePreFechamentoOrcamentoServicoEmReais()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Analise de pré fechamento Orçamento Serviço em Reais", null, tagsOfScenario, argumentsOfScenario);
#line 581
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 582
testRunner.Given("que o orçamentista está localizado na criação de um orçamento Serviço em Reais", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
#line 583
testRunner.When("Preencher os dados do orçamento para o tipo Compra com o cliente A H EMPREENDIMEN" +
                        "TOS COMERCIAL LTDA", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 584
testRunner.And("inserir um item de serviço sem data de entrega e alterar para Pendente de Análise" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 585
testRunner.Then("Precificar o item de serviço e aprovar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 586
testRunner.And("Retorna ao orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 587
testRunner.When("alterar o status para Informado, verificar que irá existir um novo botão que é pa" +
                        "ra analise de pré fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line hidden
#line 588
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 589
testRunner.And(@"verificar que deve informar com a mensagem ""É necessário informar no cadastro do Cliente um contato do Principal"" / ""É necessário informar no cadastro do Cliente um contato do Tipo Fiscal"" / ""É necessário preencher a data de entrega do orçamento"" / ""Há itens sem data de entrega informada, favor verificar"" / ""É necessário preencher a condição de entrega do orçamento.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 590
testRunner.Then("Inserir data de entrega na capa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 591
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 592
testRunner.And(@"verificar que deve mostrar ""É necessário informar no cadastro do Cliente um contato do Principal"" / ""É necessário informar no cadastro do Cliente um contato do Tipo Fiscal"" / ""Há itens sem data de entrega informada, favor verificar"" / ""É necessário preencher a condição de entrega do orçamento.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 593
testRunner.Then("Inserir data de entrega nos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 594
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 595
testRunner.And("verificar que deve mostrar a mensagem \"É necessário informar no cadastro do Clien" +
                        "te um contato do Principal\" / \"É necessário informar no cadastro do Cliente um c" +
                        "ontato do Tipo Fiscal\" / \"É necessário preencher a condição de entrega do orçame" +
                        "nto.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 596
testRunner.Then("Inserir Condição de entrega nos itens", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 597
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 598
testRunner.And("verificar que deve informar \"É necessário informar no cadastro do Cliente um cont" +
                        "ato do Principal\" / \"É necessário informar no cadastro do Cliente um contato do " +
                        "Tipo Fiscal\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 599
testRunner.Then("alterar o cliente para MARCIO GONÇALVES", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 600
testRunner.Then("ao clicar no botão Analise de Fechamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
#line 601
testRunner.And("verificar que a mensagem será de sem pendencias para fechamento de orçamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 602
testRunner.And("zerar o preço de um item direto pela base de dados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
#line 603
testRunner.And("verificar se valida corretamente que existe itens com valor zerado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
